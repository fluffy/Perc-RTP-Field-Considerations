<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="info" docName="draft-westerlund-perc-rtp-considerations-00"
     ipr="trust200902">
  <front>
    <title abbrev="Abbreviated-Title">Considerations of handling of RTP
    fields</title>

    <author fullname="Magnus Westerlund" initials="M." surname="Westerlund">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>Farogatan 2</street>

          <city>SE-164 80 Stockholm</city>

          <country>Sweden</country>
        </postal>

        <phone>+46 10 714 82 87</phone>

        <email>magnus.westerlund@ericsson.com</email>
      </address>
    </author>

    <date day="12" month="October" year="2015" />

    <abstract>
      <t>This draft discusses how the Privacy Enhanced RTP Conferencing
      solution will need consider the different RTP header fields in regards
      to both hop-by-hop and end-to-end security.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>In the design of the PERC end-to-end security solution for RTP media
      streams there is need to carefully consider what properties the
      different fields have, their security implications and provide
      recommendations for how they are handled. This review needs to consider
      both hop-by-hop properties as well as the end-to-end security.</t>

      <t>The fields analysed are that of a regular RTP packet. This is to
      consider the impact of the information that exists normally in an
      centralized multi-party conference.</t>
    </section>

    <section title="Definitions">
      <t>This document uses the following definitions:<list style="hanging">
          <t hangText="Endpoint:">An RTP stream sending and/or receiving
          entity that is part of the end-to-end security context.</t>

          <t hangText="MDD:">Media Delivery Device - An RTP middlebox that
          operates according to any of the three possible <xref
          target="I-D.ietf-avtcore-rtp-topologies-update">RTP
          topologies</xref> that is possible in the PERC system:<list
              style="empty">
              <t>Transport Translator - Relay</t>

              <t>Switching RTP Mixer</t>

              <t>Selective Forwarding Middlebox (SFM)</t>
            </list></t>

          <t hangText="Third Party:">An entity that is neither an endpoint nor
          an MDD.</t>
        </list></t>

      <t></t>

      <section title="Connection Case">
        <t>This analys is based on a basic connectivity use cases, where a
        media stream sending endpoint (originating) sends one or more RTP
        streams to a MDD. That MDD is in its turn connected to another MDD
        (Cascaded) which further sends the media (when selecting to) from the
        originating endpoint to the receiving endpoint. This connection case
        is depicted in <xref target="fig-connection-case"></xref>.</t>

        <figure anchor="fig-connection-case">
          <artwork><![CDATA[+-------------+     +------+     +------+     +-----------+
|             |     |      |     |      |     |           |
| Originating +---->+ MDD  +---->+ MDD  +---->+ Receiving |
| Endpoint    |     |      |     |      |     | Endpoint  |
|             |     |      |     |      |     |           |
+-------------+     +------+     +------+     +-----------+
]]></artwork>
        </figure>

        <t></t>
      </section>

      <section title="Additional Assumptions">
        <t>This document assumes that the originating media stream is
        identified by the SSRC value used by the originating endpoint. This
        SSRC value needs to be preserved to the receiving endpoint. It is
        assumed that even if SSRC/CSRC translation is in use by an MDD, there
        will exist an one to one mapping between originating SSRC value and
        the SSRC/CSRC value the receiving endpoint receives. Further for MDDs
        operating as Media Switching RTP mixers they will indicate the
        originating SSRC as CSRC when it switches that stream into one of the
        MDD's SSRCs. The CSRC will need to be maintained even over multiple
        MDDs. </t>
      </section>
    </section>

    <section title="RTP Packets Fields">
      <t>This section analyses each RTP packet field or part. The anlysis for
      each field should answer the following questions:<list style="empty">
          <t>Can it or needs to be modified on path by an MDD?</t>

          <t>Does the receiving endpoint need the originating endpoint's set
          value?</t>

          <t>Does it need end-to-end authentication?</t>

          <t>Does it need end-to-end confidentiality?</t>

          <t>Does it need hop-by-hop authentication?</t>

          <t>Does it need hob-by-hop confidentiality?</t>

          <t></t>

          <t></t>
        </list></t>

      <t>Some general considerations apply. Fields that are end-to-end
      authenticated is actually recommended to be hop-by-hop authenticated,
      even when there only are a end-to-end version of the field. The reason
      for this is to detect modifications at the earliest instance and avoid
      wasting resource further down the path.</t>

      <section title="Version Field (V)">
        <t>As the solution is focused on RTP as defined by <xref
        target="RFC3550"></xref> this field must be 2. The field is not
        expected to be modified by an MDD. The receiving endpoint will also
        assume that the originating endpoint used RTP (V=2). Modification of
        this field should result in the packet being dropped by the receiving
        endpoint or MDD, independent if it is hop-by-hop authenticated. The
        version field does not require end-to-end authentication as the MDD
        has more efficient denial of service attacks that it can perform on
        the endpoints, including not forwarding a single media packet/stream.
        The field does not need to be confidentiality protected end-to-end as
        the MDD must know that it is RTP it receives. The field may be
        hop-by-hop confidentiality protected as part of an attempt to hide
        that the packet stream is RTP, although packet analysis is likely to
        reveal that the streams are real-time media anyway.</t>
      </section>

      <section title="Padding Indicator bit (P)">
        <t>The padding bit is an indicator for the presence of the padding
        octets at the end of the RTP payload. As further discussed in <xref
        target="sec-padding-octets">Padding Octets</xref> the padding is
        considered part of the payload and jointly protected with the payload.
        The reason for this is that padding can help hide length variations in
        the payload that can leak information about the media content being
        carried <xref target="RFC6562"></xref>.</t>

        <t>As the Payload and padding octets are end-to-end protected, the
        padding indicator can't be modified by the MDD, due to its inability
        to remove the padding octets. For correct processing in the receiving
        endpoint the padding indicator needs to be correct. Therefore it
        should be end-to-end authenticated. It could be end-to-end
        confidentiality protected. The benefit of protecting it end-to-end
        would be that the MDD would not know if the end-to-end payload is
        padded or not. Knowing if the payload is padded or not reduces the
        uncertainty for an attacker that attempts to perform content analysis
        based on payload length. Because of that it would beneficial to
        protect the padding bit also hop-by-hop, if not already protected
        end-to-end. The padding bit should be hop-by-hop authenticated to
        protect if end-to-end authentication is not used.</t>
      </section>

      <section title="Extension Indicator bit (X)">
        <t>The extension indicator bit indicates if the header extension part
        is present. The MDD will be the target recipient of some RTP header
        extensions. It can also remove the ones not necessary to reach the
        receiving endpoint. This can result that something starting out with
        header extensions may no longer have any on the last hop. Thus, the
        MDD must be able to modify the X bit. Currently, there is no strong
        argument for why a receiving endpoint needs to know that there where
        header extensions present from the originating endpoint that has been
        removed. It might arise if one starts using end-to-end confidentiality
        protected header extensions and want to ensure detection of removal of
        such header extensions by the MDD. However, other methods for ensuring
        that is likely to exist. Conclusion is that there are no need for
        knowing the original value. </t>

        <t>There are no need for end-to-end confidentiality, nor
        authentication. Hop-by-hop authentication shall be used to prevent
        unnecesary erronous processing of the packet. Hop-by-hop
        confidentiality is recommended but lack of it has very minor impact as
        the information leaked is the presence or not of header extensions.
        Having this knowledge may simplify payload length based attacks in
        regards to the content. </t>
      </section>

      <section title="CSRC Count (CC)">
        <t>Contributing Sources count indicates how many CSRC values that are
        part of the CSRC field and are critical to know to correctly find the
        start of the payload within the RTP packet. When using MDDs that
        follow the Media Switching RTP Mixer topology (Section 3.6.2 of <xref
        target="I-D.ietf-avtcore-rtp-topologies-update"></xref>) the MDD will
        need to insert the originating endpoint's SSRC as CSRC value in the
        outgoing stream when that stream contains a payload from the by the
        CSRC identified originating stream. This results that in the MDD can
        modify and add CSRC fields when performing switching. And in cases an
        MDD operating like a SFM (Section 3.7 of <xref
        target="I-D.ietf-avtcore-rtp-topologies-update"></xref>) receives a
        switched media stream it may attempt to restore the mixed stream into
        a number of SSRC specific streams, thus removing the CSRC field. An
        originating endpoint is unlikely to have a need to insert an CSRC,
        this as in PERC context it is expected that the media sources have a
        direct relation to the endpoint. The need for an endpoint to express
        that it generates a mixed or switched stream where it can generate
        "end-to-end" secured payload with such properties appear to be in a
        violation of the intended security model. The current conclusion will
        be no need for orignal value. <list style="empty">
            <t>Note: The possibility for originating endpoints to create a
            CSRC list will need further discussion as it affects the
            possibility to rely on the SSRC/CSRC value as reference to the
            originating identity. </t>
          </list>The CC field does not appear to be end-to-end authenticated,
        nor confidentiality protected. The CC field shall be hop-by-hop
        authenticated to prevent third party modifcations as it effects
        finding the payload limit. Errors here can only lead to wasting
        resources for further entities in the conference, and should be
        detected as early as possible. End-to-end confidentiality is
        recommened</t>

        <t></t>
      </section>

      <section title="Marker Bit (M)">
        <t></t>
      </section>

      <section title="Payload Type (PT)">
        <t></t>
      </section>

      <section title="Sequence Number">
        <t></t>
      </section>

      <section title="Timestamp">
        <t></t>
      </section>

      <section title="SSRC">
        <t></t>
      </section>

      <section title="CSRC List">
        <t></t>
      </section>

      <section title="Header Extension">
        <t></t>
      </section>

      <section title="Payload">
        <t></t>
      </section>

      <section anchor="sec-padding-octets" title="Padding Octets">
        <t></t>
      </section>
    </section>

    <section anchor="Summary" title="Summery">
      <t>The following table summarizes the information from the previous
      section.</t>

      <texttable anchor="summaryTable" title="Summary of Handling Required">
        <ttcol align="center">Data</ttcol>

        <ttcol align="center">MDD Mod</ttcol>

        <ttcol align="center">Orig Needed</ttcol>

        <ttcol align="center">E2E Auth</ttcol>

        <ttcol align="center">E2E Conf</ttcol>

        <ttcol align="center">HBH Auth</ttcol>

        <ttcol align="center">HBH Conf</ttcol>

        <c>V</c>

        <c>No</c>

        <!-- MDD Modify -->

        <c>No</c>

        <!-- Orig Needed-->

        <c>No</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>No</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>P</c>

        <c>No</c>

        <!-- MDD Modify -->

        <c>No</c>

        <!-- Orig Needed-->

        <c>No</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>X</c>

        <c>Yes</c>

        <!-- MDD Modify -->

        <c>No</c>

        <!-- Orig Needed-->

        <c>No</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>CC</c>

        <c>Yes</c>

        <!-- MDD Modify -->

        <c>No</c>

        <!-- Orig Needed-->

        <c>No</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>M</c>

        <c>?</c>

        <!-- MDD Modify -->

        <c>?</c>

        <!-- Orig Needed-->

        <c>?</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>PT</c>

        <c>May</c>

        <!-- MDD Modify -->

        <c>?</c>

        <!-- Orig Needed-->

        <c>?</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>Seq No</c>

        <c>May</c>

        <!-- MDD Modify -->

        <c>Yes</c>

        <!-- Orig Needed-->

        <c>Yes</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>Timestamp</c>

        <c>May</c>

        <!-- MDD Modify -->

        <c>?</c>

        <!-- Orig Needed-->

        <c>?</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>SSRC</c>

        <c>May</c>

        <!-- MDD Modify -->

        <c>Yes</c>

        <!-- Orig Needed-->

        <c>Yes</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>CSRCs</c>

        <c>Yes</c>

        <!-- MDD Modify -->

        <c>No</c>

        <!-- Orig Needed-->

        <c>No</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>No</c>

        <!-- HBH Conf-->

        <c>Extensions</c>

        <c>Yes</c>

        <!-- MDD Modify -->

        <c>No</c>

        <!-- Orig Needed-->

        <c>No</c>

        <!-- E2E Auth-->

        <c>No</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>Some</c>

        <!-- HBH Conf-->

        <c>Payload</c>

        <c>No</c>

        <!-- MDD Modify -->

        <c>Yes</c>

        <!-- Orig Needed-->

        <c>Yes</c>

        <!-- E2E Auth-->

        <c>Yes</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>Yes</c>

        <!-- HBH Conf-->

        <c>Padding</c>

        <c>No</c>

        <!-- MDD Modify -->

        <c>Yes</c>

        <!-- Orig Needed-->

        <c>Yes</c>

        <!-- E2E Auth-->

        <c>Yes</c>

        <!-- E2E Conf-->

        <c>Yes</c>

        <!--HBH Auth -->

        <c>Yes</c>

        <!-- HBH Conf-->
      </texttable>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes no request of IANA.</t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t></t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include='reference.RFC.3550'?>

      <?rfc include='reference.RFC.6562'?>

      <?rfc include='reference.I-D.ietf-avtcore-rtp-topologies-update'?>
    </references>
  </back>
</rfc>
